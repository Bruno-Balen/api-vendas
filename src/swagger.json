{
    "swagger": "2.0",
    "info": {
      "version": "1.0.0",
      "title": "API de Vendas",
      "description": "Documentação da API de Vendas"
    },
    "host": "localhost:3000",
    "basePath": "/",
    "schemes": ["http"],
    "paths": {
      "/pessoas": {
        "get": {
          "summary": "Lista todas as pessoas",
          "description": "Retorna uma lista de todas as pessoas cadastradas.",
          "responses": {
            "200": {
              "description": "Lista de pessoas retornada com sucesso",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "nome": {
                      "type": "string",
                      "example": "João da Silva"
                    },
                    "email": {
                      "type": "string",
                      "example": "joao.silva@email.com"
                    },
                    "telefone": {
                      "type": "string",
                      "example": "(11) 91234-5678"
                    },
                    "endereco": {
                      "type": "string",
                      "example": "Rua das Flores, 123"
                    },
                    "codigo": {
                      "type": "integer",
                      "example": 210
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Erro interno do servidor"
            }
          }
        },
        "post": {
          "summary": "Cria uma nova pessoa",
          "description": "Adiciona uma nova pessoa ao sistema com todos os campos obrigatórios.",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "required": true,
              "description": "Dados da pessoa a ser criada",
              "schema": {
                "type": "object",
                "properties": {
                  "nome": {
                    "type": "string",
                    "example": "João da Silva"
                  },
                  "email": {
                    "type": "string",
                    "example": "joao.silva@email.com"
                  },
                  "telefone": {
                    "type": "string",
                    "example": "(11) 91234-5678"
                  },
                  "datanasc": {
                    "type": "string",
                    "format": "date",
                    "example": "1990-01-01"
                  },
                  "endereco": {
                    "type": "string",
                    "example": "Rua das Flores, 123"
                  },
                  "codpessoa": {
                    "type": "integer",
                    "example": 210
                  }
                },
                "required": ["nome", "email", "telefone", "datanasc" ,"endereco", "codpessoa"]
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Pessoa criada com sucesso",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "example": 1
                  },
                  "nome": {
                    "type": "string",
                    "example": "João da Silva"
                  },
                  "email": {
                    "type": "string",
                    "example": "joao.silva@email.com"
                  },
                  "telefone": {
                    "type": "string",
                    "example": "(11) 91234-5678"
                  },
                  "datanasc": {
                    "type": "string",
                    "format": "date",
                    "example": "1990-01-01"
                  },
                  "endereco": {
                    "type": "string",
                    "example": "Rua das Flores, 123"
                  },
                  "codigo": {
                    "type": "integer",
                    "example": 210
                  }
                }
              }
            },
            "400": {
              "description": "Campos obrigatórios faltando"
            },
            "500": {
              "description": "Erro interno do servidor"
            }
          }
        }
      },
      "/pessoas/{id}": {
        "get": {
          "summary": "Busca uma pessoa pelo ID",
          "description": "Retorna os dados de uma pessoa específica com base no ID fornecido.",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "description": "ID da pessoa a ser buscada",
              "type": "integer",
              "example": 1
            }
          ],
          "responses": {
            "200": {
              "description": "Dados da pessoa retornados com sucesso",
              "schema": {
                "type": "object",
                "properties": {
                  "idpessoa": {
                    "type": "integer",
                    "example": 1
                  },
                  "nome": {
                    "type": "string",
                    "example": "João da Silva"
                  },
                  "email": {
                    "type": "string",
                    "example": "joao.silva@email.com"
                  },
                  "datanasc": {
                    "type": "string",
                    "format": "date",
                    "example": "1990-01-01"
                  },
                  "telefone": {
                    "type": "string",
                    "example": "(11) 91234-5678"
                  },
                  "codpesseoa": {
                    "type": "integer",
                    "example": "201"
                  }
                }
              }
            },
            "404": {
              "description": "Pessoa não encontrada"
            },
            "500": {
              "description": "Erro interno do servidor"
            }
          }
        },
        "delete": {
          "summary": "Deleta uma pessoa pelo ID",
          "description": "Remove uma pessoa específica do sistema com base no ID fornecido.",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "description": "ID da pessoa a ser deletada",
              "type": "integer",
              "example": 1
            }
          ],
          "responses": {
            "200": {
              "description": "Pessoa deletada com sucesso"
            },
            "404": {
              "description": "Pessoa não encontrada"
            },
            "500": {
              "description": "Erro interno do servidor"
            }
          }
        },
        "put": {
          "summary": "Atualiza uma pessoa pelo ID",
          "description": "Atualiza os dados de uma pessoa específica com base no ID fornecido.",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "description": "ID da pessoa a ser atualizada",
              "type": "integer",
              "example": 1
            },
            {
              "name": "body",
              "in": "body",
              "required": true,
              "description": "Dados atualizados da pessoa",
              "schema": {
                "type": "object",
                "properties": {
                  "nome": {
                    "type": "string",
                    "example": "João da Silva"
                  },
                  "email": {
                    "type": "string",
                    "example": "joao.silva@email.com"
                  },
                  "telefone": {
                    "type": "string",
                    "example": "(11) 91234-5678"
                  },
                  "datanasc": {
                    "type": "string",
                    "format": "date",
                    "example": "1990-01-01"
                  },
                  "codpessoa": {
                    "type": "integer",
                    "example": 210
                  }
                },
                "required": ["nome", "email", "telefone", "datanasc", "endereco", "codpessoa"]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Pessoa atualizada com sucesso",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "example": 1
                  },
                  "nome": {
                    "type": "string",
                    "example": "João da Silva"
                  },
                  "email": {
                    "type": "string",
                    "example": "joao.silva@email.com"
                  },
                  "telefone": {
                    "type": "string",
                    "example": "(11) 91234-5678"
                  },
                  "datanasc": {
                    "type": "string",
                    "format": "date",
                    "example": "1990-01-01"
                  },
                  "endereco": {
                    "type": "string",
                    "example": "Rua das Flores, 123"
                  },
                  "codpessoa": {
                    "type": "integer",
                    "example": 210
                  }
                }
              }
            },
            "404": {
              "description": "Pessoa não encontrada"
            },
            "500": {
              "description": "Erro interno do servidor"
            }
          }
        }
      },
      "/clientes": {
        "get": {
          "summary": "Listar clientes",
          "description": "Retorna uma lista de todos os clientes.",
          "responses": {
            "200": {
              "description": "Lista de clientes retornada com sucesso"
            }
          }
        },
        "post": {
          "summary": "Criar cliente",
          "description": "Cria um novo cliente associando a uma pessoa.",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "codcliente": { "type": "integer" },
                  "idpessoa": { "type": "integer" }
                },
                "required": ["codcliente", "idpessoa"]
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Cliente criado com sucesso"
            }
          }
        }
      },
      "/clientes/{id}": {
        "get": {
          "summary": "Detalhes de um cliente",
          "description": "Retorna os detalhes de um cliente específico.",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "integer"
            }
          ],
          "responses": {
            "200": {
              "description": "Detalhes do cliente retornados com sucesso"
            }
          }
        },
        "put": {
          "summary": "Atualizar cliente",
          "description": "Atualiza os dados de um cliente específico.",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "integer"
            },
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "codcliente": { "type": "integer" },
                  "idpessoa": { "type": "integer" }
                },
                "required": ["codcliente", "idpessoa"]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Cliente atualizado com sucesso"
            }
          }
        },
        "delete": {
          "summary": "Deletar cliente",
          "description": "Remove um cliente específico do sistema.",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "integer"
            }
          ],
          "responses": {
            "200": {
              "description": "Cliente deletado com sucesso"
            }
          }
        }
      },
      "/funcionarios": {
        "get": {
          "summary": "Listar funcionários",
          "description": "Retorna uma lista de todos os funcionários.",
          "responses": {
            "200": {
              "description": "Lista de funcionários retornada com sucesso"
            }
          }
        },
        "post": {
          "summary": "Criar funcionário",
          "description": "Cria um novo funcionário associando a uma pessoa.",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "salario": { "type": "number" },
                  "cargo": { "type": "string" },
                  "idpessoa": { "type": "integer" },
                  "codfuncionario": { "type": "integer" }
                },
                "required": ["salario", "cargo", "idpessoa", "codfuncionario"]
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Funcionário criado com sucesso"
            }
          }
        }
      },
      "/funcionarios/{id}": {
        "get": {
          "summary": "Detalhes de um funcionário",
          "description": "Retorna os detalhes de um funcionário específico.",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "integer"
            }
          ],
          "responses": {
            "200": {
              "description": "Detalhes do funcionário retornados com sucesso"
            }
          }
        },
        "put": {
          "summary": "Atualizar funcionário",
          "description": "Atualiza os dados de um funcionário específico.",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "integer"
            },
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "salario": { "type": "number" },
                  "cargo": { "type": "string" },
                  "idpessoa": { "type": "integer" },
                  "codfuncionario": { "type": "integer" }
                },
                "required": ["salario", "cargo", "idpessoa", "codfuncionario"]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Funcionário atualizado com sucesso"
            }
          }
        },
        "delete": {
          "summary": "Deletar funcionário",
          "description": "Remove um funcionário específico do sistema.",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "integer"
            }
          ],
          "responses": {
            "200": {
              "description": "Funcionário deletado com sucesso"
            }
          }
        }
      },
      "/categorias": {
        "get": {
          "summary": "Listar categorias",
          "description": "Retorna uma lista de todas as categorias.",
          "responses": {
            "200": {
              "description": "Lista de categorias retornada com sucesso"
            }
          }
        }
      },
      "/categorias/{id}": {
        "get": {
          "summary": "Detalhes de uma categoria",
          "description": "Retorna os detalhes de uma categoria específica.",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "integer"
            }
          ],
          "responses": {
            "200": {
              "description": "Detalhes da categoria retornados com sucesso"
            }
          }
        }
      },
      "/produtos": {
        "get": {
          "summary": "Listar produtos",
          "description": "Retorna uma lista de todos os produtos.",
          "responses": {
            "200": {
              "description": "Lista de produtos retornada com sucesso"
            }
          }
        },
        "post": {
          "summary": "Criar produto",
          "description": "Cria um novo produto associando a uma categoria.",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "codproduto": { "type": "integer" },
                  "nome": { "type": "string" },
                  "preco": { "type": "number" },
                  "qntestoque": { "type": "integer" },
                  "idcategoria": { "type": "integer" }
                },
                "required": ["codproduto", "nome", "preco", "qntestoque", "idcategoria"]
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Produto criado com sucesso"
            }
          }
        }
      },
      "/produtos/{id}": {
        "get": {
          "summary": "Detalhes de um produto",
          "description": "Retorna os detalhes de um produto específico.",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "integer"
            }
          ],
          "responses": {
            "200": {
              "description": "Detalhes do produto retornados com sucesso"
            }
          }
        },
        "put": {
          "summary": "Atualizar produto",
          "description": "Atualiza os dados de um produto específico.",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "integer"
            },
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "codproduto": { "type": "integer" },
                  "nome": { "type": "string" },
                  "preco": { "type": "number" },
                  "qntestoque": { "type": "integer" },
                  "idcategoria": { "type": "integer" }
                },
                "required": ["codproduto", "nome", "preco", "qntestoque", "idcategoria"]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Produto atualizado com sucesso"
            }
          }
        },
        "delete": {
          "summary": "Deletar produto",
          "description": "Remove um produto específico do sistema.",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "integer"
            }
          ],
          "responses": {
            "200": {
              "description": "Produto deletado com sucesso"
            }
          }
        }
      },
      "/produtos/categoria/{idcategoria}": {
        "get": {
          "summary": "Listar produtos de uma categoria",
          "description": "Retorna uma lista de produtos associados a uma categoria específica.",
          "parameters": [
            {
              "name": "idcategoria",
              "in": "path",
              "required": true,
              "type": "integer"
            }
          ],
          "responses": {
            "200": {
              "description": "Lista de produtos retornada com sucesso"
            }
          }
        }
      },
      "/vendas": {
        "get": {
          "summary": "Listar vendas",
          "description": "Retorna uma lista de todas as vendas.",
          "responses": {
            "200": {
              "description": "Lista de vendas retornada com sucesso"
            }
          }
        },
        "post": {
          "summary": "Criar venda",
          "description": "Cria uma nova venda associando cliente e funcionário.",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "data": { "type": "string", "format": "date" },
                  "idfuncionario": { "type": "integer" },
                  "valor": { "type": "number" },
                  "idcliente": { "type": "integer" }
                },
                "required": ["data", "idfuncionario", "valor", "idcliente"]
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Venda criada com sucesso"
            }
          }
        }
      },
      "/vendas/{id}": {
        "get": {
          "summary": "Detalhes de uma venda",
          "description": "Retorna os detalhes de uma venda específica.",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "integer"
            }
          ],
          "responses": {
            "200": {
              "description": "Detalhes da venda retornados com sucesso"
            }
          }
        },
        "delete": {
          "summary": "Deletar venda",
          "description": "Remove uma venda específica do sistema.",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "integer"
            }
          ],
          "responses": {
            "200": {
              "description": "Venda deletada com sucesso"
            }
          }
        },
        "put": {
          "summary": "Atualizar uma venda",
          "description": "Atualiza os dados de uma venda existente, como valor, idcliente, idfuncionario e data.",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "description": "ID da venda a ser atualizada",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "body",
              "in": "body",
              "required": true,
              "description": "Dados da venda a serem atualizados",
              "schema": {
                "type": "object",
                "properties": {
                  "idfuncionario": {
                    "type": "integer",
                    "description": "ID do funcionário responsável pela venda"
                  },
                  "idcliente": {
                    "type": "integer",
                    "description": "ID do cliente associado à venda"
                  },
                  "valor": {
                    "type": "number",
                    "description": "Valor total da venda"
                  },
                  "data": {
                    "type": "string",
                    "format": "date",
                    "description": "Data da venda no formato YYYY-MM-DD"
                  }
                },
                "required": ["idfuncionario", "idcliente", "valor", "data"]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Venda atualizada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "ok"
                      },
                      "message": {
                        "type": "string",
                        "example": "Venda atualizada com sucesso"
                      },
                      "data": {
                        "type": "object",
                        "description": "Dados da venda atualizada"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Erro de validação nos dados enviados",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Campos obrigatórios faltando"
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Venda não encontrada",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Venda não encontrada"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Erro interno do servidor",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Erro do servidor"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/vendas/{id}/produtos": {
        "get": {
          "summary": "Listar produtos de uma venda",
          "description": "Retorna uma lista de produtos associados a uma venda específica.",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "integer"
            }
          ],
          "responses": {
            "200": {
              "description": "Lista de produtos retornada com sucesso"
            }
          }
        },
        "post": {
          "summary": "Adicionar produto à venda",
          "description": "Adiciona um produto a uma venda específica.",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "integer"
            },
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "idproduto": { "type": "integer" },
                  "quantidade": { "type": "integer" },
                  "valor": { "type": "number" }
                },
                "required": ["idproduto", "quantidade", "valor"]
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Produto adicionado à venda com sucesso"
            }
          }
        }
      },
      "/vendas/{id}/produtos/{idproduto}": {
        "delete": {
          "summary": "Remover produto da venda",
          "description": "Remove um produto de uma venda específica.",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "integer"
            },
            {
              "name": "idproduto",
              "in": "path",
              "required": true,
              "type": "integer"
            }
          ],
          "responses": {
            "200": {
              "description": "Produto removido da venda com sucesso"
            }
          }
        },
        "put": {
          "summary": "Atualizar produto de uma venda",
          "description": "Atualiza os dados de um produto associado a uma venda específica.",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "description": "ID da venda",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "idproduto",
              "in": "path",
              "required": true,
              "description": "ID do produto a ser atualizado na venda",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "body",
              "in": "body",
              "required": true,
              "description": "Dados do produto a serem atualizados",
              "schema": {
                "type": "object",
                "properties": {
                  "quantidade": {
                    "type": "integer",
                    "description": "Nova quantidade do produto"
                  },
                  "valor": {
                    "type": "number",
                    "description": "Novo valor do produto"
                  }
                },
                "required": ["quantidade", "valor"]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Produto atualizado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "ok"
                      },
                      "message": {
                        "type": "string",
                        "example": "Produto da venda atualizado com sucesso"
                      },
                      "data": {
                        "type": "object",
                        "description": "Dados do produto atualizado"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Erro de validação nos dados enviados",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Campos obrigatórios faltando"
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Produto ou venda não encontrado",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Produto não encontrado na venda"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Erro interno do servidor",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Erro do servidor"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
}